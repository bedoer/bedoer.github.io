<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on My New Hugo Site</title>
    <link>https://github.com/bedoer/bedoer.github.io/blog/</link>
    <description>Recent content in Blogs on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 09 Mar 2021 16:07:53 +0800</lastBuildDate><atom:link href="https://github.com/bedoer/bedoer.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用Hugo搭建个人博客(Win10)</title>
      <link>https://github.com/bedoer/bedoer.github.io/blog/first/</link>
      <pubDate>Tue, 09 Mar 2021 16:07:53 +0800</pubDate>
      
      <guid>https://github.com/bedoer/bedoer.github.io/blog/first/</guid>
      <description>Hugo的下载与环境变量的配置(Win10) 在https://github.com/gohugoio/hugo/releases处下载对应版本的hugo。我下载的版本是下面这个: 将下载的压缩包解压。
设置环境变量: 此电脑-属性-高级系统设置-环境变量-系统变量中的Path中新建，路径为解压后文件夹中hugo.exe文件的位置。如图: 配置好后在cmd中运行&amp;quot;hugo &amp;ndash;version&amp;quot;若无误则配置正确。
初始化站点目录 hugo new site 文件夹名字 主题的下载与设置 在https://themes.gohugo.io/挑选喜欢的主题并下载。
用git clone命令将主题下载至themes文件夹下，如：
git clone git@github.com:lxndrblz/anatole.git themes/anatole 使用下载的anatole主题，生成页面并启动Web服务（该命令需在生成目录下运行）：
 可以使用&amp;quot;hugo &amp;ndash;help&amp;quot;来查询相关命令
 hugo server -t anatole --buildDrafts 可以在浏览器地址栏输入该地址查看（刚开始可能有些简陋，后续会进一步美化）
通过“hugo new”命令可以为站点创建一个新内容
在Github上的部署 在github上创建一个名为&amp;quot;你的用户名.github.io&amp;quot;的仓库
cmd运行：
hugo --theme=主题名 --baseUrl=&amp;quot;库的地址&amp;quot; --buildDrafts 如果使用Github来部署博客，只需要将public/里的文件上传到刚刚创建的库就可以。
 git init （把这个目录变成Git可以管理的仓库） git add . （把文件添加到仓库） git commit -m &amp;quot;&amp;quot; （把文件提交到仓库） git remote add origin 仓库地址.git （把一个已有的本地仓库与之关联） git push -u origin master （把本地库的内容推送到远程，用git push命令，实际上是把当前分支master推送到远程。由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。）  最终，就可以通过 https://仓库名 访问博客了（搭建在GitHub上可能不是很稳定）</description>
    </item>
    
  </channel>
</rss>
